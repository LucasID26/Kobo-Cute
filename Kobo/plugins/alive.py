from pyrogram import filters,__version__
from config import * 
import time 
from datetime import datetime
import requests
import os
import platform
import psutil
import shutil
from Kobo.tools import size
import cpuinfo
from Kobo.tools import duration
from Kobo.decorators.decorator import info_cmd







starttime = datetime.utcnow()


@info_cmd
async def PING(client, m):
  uptime = duration((datetime.utcnow() - starttime).total_seconds())
  start = time.time() 
  msg = await m.reply(text="**0% ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí**")
  end = time.time()
  durasi = (end - start) * 1000
  p_result = f"{durasi:.2f} ms"
  #await msg.edit("**20% ‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí**")
  #await msg.edit("**40% ‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí**")
  await msg.edit("**60% ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí**")
  #await msg.edit("**80% ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí**")
  await msg.edit("**100% ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà**")
  #owner = (await bot.get_users(own[1])).mention
  await msg.edit(f"""
‚ùè **PONG!!üèì**
‚îú‚Ä¢ **Pinger** ‚û• `{p_result}`
‚îú‚Ä¢ **Server** ‚û• `{ping_server()}` 
‚îú‚Ä¢ **Owner** ‚û• [YOI](https://profile.kulukgalak.repl.co/)
‚îî‚Ä¢ **UPtime**  ‚û• `{uptime}`
<a href='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTz5q_KcP8RQbDQPciRoBSlwKMyBHAKMNN-pg&amp;usqp=CAU'>‚Å†</a>
""")

def ping_server():
  url = "https://profile.kulukgalak.repl.co/"
  start = time.time()
  response = requests.get(url, timeout=5) 
  end = time.time()
  ping = (end - start) * 1000
  result = f"{ping:.2f} ms"
  return result





@info_cmd
async def SYSTEM(client,m):
  msg = await m.reply("<code>Sedang mengumpulkan data system. . .</code>")
  await msg.edit(cek_system())

def cek_system():
  try:
    #PLATFORM
    system = platform.uname()
    sistem = system.system
    kernel = system.release
    mesin = system.machine
    cpu_info = cpuinfo.get_cpu_info()['brand_raw']
    p_implementasi = platform.python_implementation()
    bit = platform.architecture()
    python_v = platform.python_version()
    uptime = duration((datetime.utcnow() - starttime).total_seconds())
   
    #DISK
    percent_disk = psutil.disk_usage(".").percent
    total, used, free = shutil.disk_usage(".")
    total_disk = size(total)
    used_disk = size(used)
    free_disk = size(free)
    process = psutil.Process(os.getpid())
    bot_usage = f"{round(process.memory_info()[0]/1024 ** 2)} MB"
    upload = size(psutil.net_io_counters().bytes_sent)
    download = size(psutil.net_io_counters().bytes_recv)

    
    #RAM
    percent_ram = psutil.virtual_memory().percent
    total_ram = size(psutil.virtual_memory().total)
    used_ram = size(psutil.virtual_memory().used)
    
    #CPU
    cpu_percentage = psutil.cpu_percent()
    cpu_counts = psutil.cpu_count()
    
    msg = f"""
**CPU** ( {cpu_counts} core / {cpu_percentage}% )

‚ùè **SYSTEM**
‚îú‚Ä¢ **System** ‚û• `{sistem}`
‚îú‚Ä¢ **Kernel** ‚û• `{kernel}`
‚îú‚Ä¢ **CPU** ‚û• `{cpu_info}`
‚îú‚Ä¢ **Machine** ‚û• `{mesin}`
‚îú‚Ä¢ **Py_Implementation** ‚û• `{p_implementasi}`
‚îú‚Ä¢ **BIT** ‚û• `{bit[0]}`|`{bit[1]}`
‚îú‚Ä¢ **Python Version** ‚û• `{python_v}`
‚îî‚Ä¢ **Pyro** ‚û• `{__version__}`

‚ùè **DISK**
‚îú‚Ä¢ **Percent** ‚û• `{percent_disk}%`
‚îú‚Ä¢ **Total** ‚û• `{total_disk}`
‚îú‚Ä¢ **Used** ‚û• `{used_disk}`
‚îú‚Ä¢ **Bot Usage** ‚û• `{bot_usage}`
‚îú‚Ä¢ **Upload** ‚û• `{upload}`
‚îú‚Ä¢ **Download** ‚û• `{download}`
‚îî‚Ä¢ **Free** ‚û• `{free_disk}`

‚ùè **RAM**
‚îú‚Ä¢ **Percent** ‚û• `{percent_ram}%`
‚îú‚Ä¢ **Total** ‚û• `{total_ram}`
‚îî‚Ä¢ **Used** ‚û• `{used_ram}`



<b>UPTIME:</b> {uptime}
"""
    return msg
  except Exception as e:
    return f"Terjadi kesalahan dalam mengumpulkan data system\n**EROR**: `{e}`"


